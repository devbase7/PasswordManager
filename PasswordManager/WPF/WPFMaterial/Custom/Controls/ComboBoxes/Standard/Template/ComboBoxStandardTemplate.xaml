<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:auxiliary="clr-namespace:WPFMaterial.Custom.Controls.ComboBoxes.Standard.Auxiliary"
	xmlns:comboBoxStandard="clr-namespace:WPFMaterial.Custom.Controls.ComboBoxes.Standard.Code">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary
			Source="pack://application:,,,/WPFMaterial;component/Custom/Controls/ComboBoxes/Standard/Resources/Colors.xaml"/>

		<ResourceDictionary
			Source="pack://application:,,,/WPFMaterial;component/Custom/Controls/ComboBoxes/Standard/Resources/Styles.xaml"/>

		<ResourceDictionary
			Source="pack://application:,,,/WPFMaterial;component/Custom/Controls/ComboBoxes/Standard/Resources/Templates.xaml"/>

		<ResourceDictionary
			Source="pack://application:,,,/WPFMaterial;component/Common/Resources/Templates.xaml"/>
	</ResourceDictionary.MergedDictionaries>


	<Style
		TargetType="comboBoxStandard:ComboBoxStandardCode">
		<Style.Resources>
			<auxiliary:ConverterMultiItemsPanelHeight
				x:Key="ConverterMulti-ItemsPanelHeight"/>
		</Style.Resources>


		<Setter
			Property="IconBrush"
			Value="{StaticResource SolidColorBrush-Icon}"/>

		<Setter
			Property="CaretBrush"
			Value="{StaticResource SolidColorBrush-Caret}"/>

		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="comboBoxStandard:ComboBoxStandardCode">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Width="Auto"/>

							<ColumnDefinition/>

							<ColumnDefinition
								Width="Auto"/>
						</Grid.ColumnDefinitions>

						<Path
							Grid.Column="0"
							Name="icon"
							Stretch="Uniform"
							Fill="{TemplateBinding IconBrush}"
							Width="17"
							Height="{Binding Width, RelativeSource={RelativeSource Self}}"
							VerticalAlignment="Top"
							Data="{TemplateBinding Icon}"
							Margin="0,13,8,0"/>

						<Label
							Grid.Column="1"
							Content="{TemplateBinding HintIfTextIsEmpty}"
							Visibility="{TemplateBinding HintIfTextIsEmptyVisibility}"
							Background="{StaticResource SolidColorBrush-HintIfTextIsEmptyBackground}"
							Foreground="{StaticResource SolidColorBrush-HintIfTextIsEmptyForeground}"
							FontSize="8"
							FontFamily="Segoe UI"
							Padding="4,0,4,1"
							Template="{StaticResource Label-HintIfTextIsEmpty-Template}"
							HorizontalAlignment="Left"
							VerticalAlignment="Bottom"
							Margin="0,0,25,0"/>

						<TextBox
							Grid.Column="1"
							Name="PART_EditableTextBox"
							FontFamily="{TemplateBinding FontFamily}"
							FontSize="{TemplateBinding FontSize}"
							materialDesign:HintAssist.Hint="{TemplateBinding HintFloating}"
							materialDesign:HintAssist.Foreground="{Binding (materialDesign:TextFieldAssist.UnderlineBrush), RelativeSource={RelativeSource Self}}"
							materialDesign:HintAssist.HintOpacity="0.3"
							Padding="2,0"
							CaretBrush="{TemplateBinding CaretBrush}"
							materialDesign:TextFieldAssist.UnderlineBrush="{StaticResource SolidColorBrush-TextBoxUnderline}"
							Cursor="IBeam"
							TabIndex="{TemplateBinding TabIndex}"
							IsReadOnly="{TemplateBinding IsReadOnly}"
							Style="{StaticResource TextBox-TextBoxWithFloatingHint-Style}"
							Margin="0,-10,0,11"/>

						<ToggleButton
							Grid.Column="2"
							Template="{StaticResource ToggleButton-ComboBoxStandard-Template}"
							IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
							ClickMode="Press"
							Cursor="Hand"
							Margin="0,10,25,11"/>

						<Button
							Grid.Column="2"
							Name="PART_Button_Clear"
							Background="{StaticResource SolidColorBrush-ButtonClearBackground}"
							Width="14"
							Height="{Binding Width, RelativeSource={RelativeSource Self}}"
							HorizontalAlignment="Right"
							VerticalAlignment="Top"
							Focusable="False"
							Style="{StaticResource Button-TextBoxClear-Template}"
							Margin="0,14,0,0"/>

						<Popup
							Grid.Column="1"
							Name="rootContainerItemsPanel"
							Placement="Bottom"
							AllowsTransparency="True"
							PopupAnimation="Slide"
							IsOpen="{TemplateBinding IsDropDownOpen}">
							<Border
								Name="itemsPanelBody"
								CornerRadius="0,0,4,4"
								BorderThickness="1,0,1,1"
								BorderBrush="#B4B4B4"
								Background="White">
								<StackPanel
									IsItemsHost="True"/>
							</Border>
						</Popup>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup
								Name="CommonStates">
								<VisualState
									Name="Normal"/>

								<VisualState
									Name="MouseOver"/>

								<VisualState
									Name="Disabled">
									<Storyboard>
										
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup
								Name="EditStates">
								<VisualState
									Name="Editable">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="PART_EditableTextBox"
											Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{x:Static Visibility.Visible}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState
									Name="Uneditable"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								TargetName="icon"
								Property="Fill"
								Value="{StaticResource SolidColorBrush-IconDisabled}"/>
						</Trigger>

						<Trigger
							SourceName="PART_EditableTextBox"
							Property="Text"
							Value="">
							<Setter
								TargetName="PART_Button_Clear"
								Property="Visibility"
								Value="Collapsed"/>
						</Trigger>

						<Trigger
							Property="IsGrouping"
							Value="true">
							<Setter
								Property="ScrollViewer.CanContentScroll"
								Value="False"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>