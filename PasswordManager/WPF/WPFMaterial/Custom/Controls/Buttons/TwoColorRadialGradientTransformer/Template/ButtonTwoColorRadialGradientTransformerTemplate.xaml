<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:buttonTwoColorRadialGradientTransformer="clr-namespace:WPFMaterial.Custom.Controls.Buttons.TwoColorRadialGradientTransformer.Code">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary
			Source="pack://application:,,,/WPFMaterial;component/Custom/Controls/Buttons/TwoColorRadialGradientTransformer/Resources/Colors.xaml"/>

		<ResourceDictionary
			Source="pack://application:,,,/WPFMaterial;component/Common/Resources/Styles.xaml"/>

		<ResourceDictionary
			Source="pack://application:,,,/WPFMaterial;component/Common/Resources/Templates.xaml"/>
	</ResourceDictionary.MergedDictionaries>


	<Style
		TargetType="buttonTwoColorRadialGradientTransformer:ButtonTwoColorRadialGradientTransformerCode"
		BasedOn="{StaticResource ButtonBase-CursorHandIsMouseOverAndIsPressed-Style}">
		<Setter
			Property="Height"
			Value="28"/>

		<Setter
			Property="FocusVisualStyle"
			Value="{StaticResource Control-RectangleFocusVisualStyleMinus3-Template}"/>

		<Setter
			Property="FontFamily"
			Value="Segoe UI Semibold"/>

		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="buttonTwoColorRadialGradientTransformer:ButtonTwoColorRadialGradientTransformerCode">
					<Grid>
						<Grid.ToolTip>
							<ToolTip
								Name="rootContainerToolTip"
								Style="{StaticResource ToolTip-ToolTipStandard-Template}">
								<ToolTip.Content>
									<TextBlock
										Text="Quick click"
										Margin="0,0,-1,0">
										<Run
											Text="{TemplateBinding Hotkeys}"
											Style="{StaticResource Run-MarkedText-Style}"/>
									</TextBlock>
								</ToolTip.Content>
							</ToolTip>
						</Grid.ToolTip>

						<Rectangle
							Name="body"
							RadiusX="4"
							RadiusY="3"
							StrokeThickness="1"
							Stroke="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}">
							<Rectangle.Fill>
								<RadialGradientBrush
									RadiusX="1.6"
									RadiusY="0.5">
									<GradientStop
										Offset="0.2"
										Color="{Binding InnerColorRadialGradientBackground, RelativeSource={RelativeSource TemplatedParent}}"/>

									<GradientStop
										Offset="1"
										Color="{Binding OuterColorRadialGradientBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
								</RadialGradientBrush>
							</Rectangle.Fill>

							<Rectangle.Effect>
								<DropShadowEffect
									ShadowDepth="0"
									BlurRadius="6"
									RenderingBias="Quality"
									Color="{TemplateBinding OuterColorRadialGradientBackground}"/>
							</Rectangle.Effect>
						</Rectangle>

						<ContentPresenter
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							RecognizesAccessKey="True"/>

						<Path
							HorizontalAlignment="Right"
							Stretch="Uniform"
							Data="{TemplateBinding Icon}"
							Fill="{TemplateBinding Foreground}"
							Margin="7"/>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup>
								<VisualState
									Name="Normal">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="body"
											Storyboard.TargetProperty="Fill.RadiusY"
											To="0.5"
											Duration="0:0:0.2"/>
									</Storyboard>
								</VisualState>

								<VisualState
									Name="MouseOver">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="body"
											Storyboard.TargetProperty="Fill.RadiusY"
											To="0.6"
											Duration="0:0:0.2"/>
									</Storyboard>
								</VisualState>

								<VisualState
									Name="Pressed">
									<Storyboard>
										<ColorAnimation
											Storyboard.TargetName="body"
											Storyboard.TargetProperty="Fill.GradientStops[1].Color"
											To="{StaticResource Color-BackgroundOuter-Pressed}"
											Duration="0"/>

										<ColorAnimation
											Storyboard.TargetName="body"
											Storyboard.TargetProperty="Fill.GradientStops[0].Color"
											To="{StaticResource Color-BackgroundInner-Pressed}"
											Duration="0"/>
									</Storyboard>
								</VisualState>

								<VisualState
									Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="rootContainerToolTip"
											Storyboard.TargetProperty="Visibility"
											Duration="0">
											<DiscreteObjectKeyFrame
												Value="{x:Static Visibility.Hidden}"
												KeyTime="0"/>
										</ObjectAnimationUsingKeyFrames>

										<ColorAnimation
											Storyboard.TargetName="body"
											Storyboard.TargetProperty="Fill.GradientStops[1].Color"
											To="{StaticResource Color-BackgroundOuterAndInner-Disabled}"
											Duration="0"/>

										<ColorAnimation
											Storyboard.TargetName="body"
											Storyboard.TargetProperty="Fill.GradientStops[0].Color"
											To="{StaticResource Color-BackgroundOuterAndInner-Disabled}"
											Duration="0"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger
							Property="Hotkeys"
							Value="">
							<Setter
								TargetName="rootContainerToolTip"
								Property="Visibility"
								Value="Hidden"/>
						</Trigger>

						<Trigger
							Property="IsDefaulted"
							Value="True">
							<Setter
								TargetName="body"
								Property="Stroke"
								Value="{StaticResource SolidColorBrush-BorderDefaultedAndFocused}"/>
						</Trigger>

						<Trigger
							Property="IsFocused"
							Value="True">
							<Setter
								TargetName="body"
								Property="Stroke"
								Value="{StaticResource SolidColorBrush-BorderDefaultedAndFocused}"/>
						</Trigger>

						<Trigger
							Property="IsPressed"
							Value="True">
							<Setter
								TargetName="body"
								Property="Stroke"
								Value="{StaticResource SolidColorBrush-BorderPressed}"/>
						</Trigger>

						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								TargetName="body"
								Property="Stroke"
								Value="{StaticResource SolidColorBrush-BorderAndForegroundDisabled}"/>

							<Setter
								Property="Foreground"
								Value="{StaticResource SolidColorBrush-BorderAndForegroundDisabled}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>